{"version":3,"sources":["Components/Profile/Profile.module.css","Components/FriendList/FriendList.module.css","Components/TransactionHistory/TransactionHistory.module.css","Components/Profile/Profile.js","Components/TransactionHistory/TransactionHistory.js","Components/statistics/Statistics.js","Components/Container/Container.js","Components/FriendList/FriendListItem.js","Components/FriendList/FriendList.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","s","profile","description","src","alt","text","statItem","quantity","TransactionHistory","items","table","transaction","map","id","type","amount","currency","tr","Statistics","title","statistics","statList","label","percentage","style","backgroundImage","item","Container","children","FriendListItem","isOnline","status","online","offline","circle","width","nameSection","color","FriendList","friends","friendList","App","username","user","data","transactions","root","document","querySelector","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.07a3db66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__25ajP\",\"description\":\"Profile_description__3MdPc\",\"stats\":\"Profile_stats__L70kr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__jUYh4\",\"circle\":\"FriendList_circle__2OZn0\",\"online\":\"FriendList_online__1Hl_Y\",\"offline\":\"FriendList_offline__1pkKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction\":\"TransactionHistory_transaction__1GOLt\",\"tr\":\"TransactionHistory_tr__3DVXz\"};","import PropTypes from 'prop-types';\nimport s from './Profile.module.css';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  const { followers, views, likes } = stats;\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.text}>@{tag}</p>\n        <p className={s.text}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.statItem}>\n          <span className=\"label\">Followers</span>\n          <span className={s.quantity}>{followers}</span>\n        </li>\n        <li className={s.statItem}>\n          <span className=\"label\">Views</span>\n          <span className={s.quantity}>{views}</span>\n        </li>\n        <li className={s.statItem}>\n          <span className=\"label\">Likes</span>\n          <span className={s.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.objectOf(PropTypes.number.isRequired),\n};\n\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={s.table}>\n      <thead>\n        <tr className={s.transaction}>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => (\n          <tr key={id} className={s.tr}>\n            <td>{type}</td>\n            <td>{amount}</td>\n            <td>{currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.string,\n      amount: PropTypes.string,\n      currency: PropTypes.string,\n      id: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>Upload stats</h2>}\n      <ul className={s.statList}>\n        {stats.map(({ id, label, percentage }) => (\n          <li\n            style={{\n              backgroundImage: `linear-gradient(to right ,red ${percentage}%,silver ${percentage}%) `,\n            }}\n            className={s.item}\n            key={id}\n          >\n            <span className={s.label}>{label}</span>\n            <span className={s.percentage}>{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Statistics;\n","import './Container.css';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './FriendList.module.css';\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n  const status = isOnline ? s.online : s.offline;\n  return (\n    <li className={s.item}>\n      <span className={`${s.circle} ${status}`} />\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n      <div className={s.nameSection}>\n        <p\n          className={s.name}\n          style={isOnline ? { color: 'green' } : { color: 'red' }}\n        >\n          {name}\n        </p>\n      </div>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport s from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={s.friendList}>\n      {friends.map(({ id, name, avatar, isOnline }) => (\n        <FriendListItem\n          key={id}\n          name={name}\n          avatar={avatar}\n          isOnline={isOnline}\n        />\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import Profile from 'Components/Profile/Profile';\nimport user from './mass/user.json';\nimport data from './mass/data.json';\nimport friends from 'mass/friends.json';\nimport transactions from 'mass/transactions.json';\nimport Transactions from './Components/TransactionHistory/TransactionHistory';\nimport Statistics from './Components/statistics/Statistics';\nimport Container from 'Components/Container/Container';\nimport FriendList from 'Components/FriendList/FriendList';\n\nexport default function App() {\n  return (\n    <Container>\n      <Profile\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics stats={data} />\n      <Statistics stats={data} title=\"Upload stats\" />\n      <FriendList friends={friends} />\n      <Transactions items={transactions} />\n    </Container>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport react from 'react';\nimport 'modern-normalize/modern-normalize.css';\nimport 'index.css';\nconst root = document.querySelector('#root');\n\nReactDOM.render(\n  <react.StrictMode>\n    <App />\n  </react.StrictMode>,\n  root,\n);\n/* function testXor(numbers) {\n  return numbers.reduce((acc, e) => {\n    console.log(acc, e);\n    return acc ^ e;\n  });\n}\nconst test = [1, 1, 2, 2, 8, 7, 3, 3, 4, 4];\nconsole.log(testXor(test)); */\n"],"sourceRoot":""}